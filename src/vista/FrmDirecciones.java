/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import dao.*;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Cliente;
import modelo.Direccion;
import modelo.Trabajador;

/**
 *
 * @author Usuario
 */
public class FrmDirecciones extends javax.swing.JInternalFrame {

    DireccionDAO dDAO = new DireccionDAO();
    TrabajadorDAO tDAO = new TrabajadorDAO();
    ClienteDAO clDAO = new ClienteDAO();
    String accion, person;

    /**
     * Creates new form FrmDirecciones
     */
    public FrmDirecciones() {
        initComponents();
        this.listar();
        this.cargarTrabajadores();
        this.cargarClientes();
        this.accion = "guardar";
        txtId.setVisible(false);
    }

    private void listar() {
        ArrayList<Object> listaTrabajadores = dDAO.getListTrabajadores();
        ArrayList<Object> listaClientes = dDAO.getListClientes();
        DefaultTableModel modeloTabla;

        String[] titulos = {"ID", "Nombre", "Apellido", "RUT", "Direccion", "Persona"};
        modeloTabla = new DefaultTableModel(null, titulos);

        for (Object obj : listaTrabajadores) {
            Trabajador trabajador = (Trabajador) obj;
            Object[] row = new Object[6];
            row[0] = trabajador.getDireccion().getIdDireccion();
            row[1] = trabajador.getNombre();
            row[2] = trabajador.getApellido();
            row[3] = trabajador.getRut();
            row[4] = trabajador.getDireccion().getDireccion();
            row[5] = "Trabajador";
            modeloTabla.addRow(row);
        }
        for (Object obj : listaClientes) {
            Cliente cliente = (Cliente) obj;
            Object[] row = new Object[6];
            row[0] = cliente.getDireccion().getIdDireccion();
            row[1] = cliente.getNombre();
            row[2] = cliente.getApellido();
            row[3] = cliente.getRut();
            row[4] = cliente.getDireccion().getDireccion();
            row[5] = "Cliente";
            modeloTabla.addRow(row);
        }

        tablaListadoDirec.setModel(modeloTabla);
        tabGeneral.setEnabledAt(1, false);
    }

    private void limpiar() {
        txtDireccion.setText("");
        txtId.setText("");
        this.accion = "guardar";
    }

    private void mensajeError(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "System", JOptionPane.ERROR_MESSAGE);
    }

    private void mensajeOk(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "System", JOptionPane.INFORMATION_MESSAGE);
    }

    private void cargarTrabajadores() {
        DefaultComboBoxModel items = new DefaultComboBoxModel();
        ArrayList<Object> lista = tDAO.getList();

        for (Object obj : lista) {
            Trabajador trabajador = (Trabajador) obj;
            items.addElement(trabajador);
        }
        cboTrabajadores.setModel(items);
    }

    private void cargarClientes() {
        DefaultComboBoxModel items = new DefaultComboBoxModel();
        ArrayList<Object> lista = clDAO.getList();

        for (Object obj : lista) {
            Cliente cliente = (Cliente) obj;
            items.addElement(cliente);
        }
        cboClientes.setModel(items);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        tabGeneral = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaListadoDirec = new javax.swing.JTable();
        btnNuevaDireccionT = new javax.swing.JButton();
        btnNuevaDireccionCl = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        lblTrabajador = new javax.swing.JLabel();
        cboTrabajadores = new javax.swing.JComboBox<>();
        lblClientes = new javax.swing.JLabel();
        cboClientes = new javax.swing.JComboBox<>();
        txtId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        setTitle("Direcciones");

        tabGeneral.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tablaListadoDirec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaListadoDirec);

        btnNuevaDireccionT.setText("Nueva direccion trabajadores");
        btnNuevaDireccionT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaDireccionTActionPerformed(evt);
            }
        });

        btnNuevaDireccionCl.setText("Nueva direccion clientes");
        btnNuevaDireccionCl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaDireccionClActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(btnNuevaDireccionT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 192, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(289, 289, 289))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(108, 108, 108)
                    .addComponent(btnNuevaDireccionCl)
                    .addContainerGap(581, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(btnEliminar)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevaDireccionT)
                    .addComponent(btnEditar))
                .addGap(49, 49, 49))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(282, Short.MAX_VALUE)
                    .addComponent(btnNuevaDireccionCl)
                    .addGap(108, 108, 108)))
        );

        tabGeneral.addTab("Listado", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Direccion(*)");

        lblTrabajador.setText("Trabajadores(*)");

        lblClientes.setText("Clientes(*)");

        jLabel3.setText("(*) Indica que es un campo obligatorio");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(lblClientes))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(63, 63, 63)
                                        .addComponent(btnGuardar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnVolver))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(133, 133, 133)
                                        .addComponent(lblTrabajador)))
                                .addGap(47, 47, 47)
                                .addComponent(cboTrabajadores, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(jLabel3)))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTrabajador)
                    .addComponent(cboTrabajadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblClientes)
                    .addComponent(cboClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80)
                .addComponent(jLabel3)
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnVolver))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        tabGeneral.addTab("Mantenimiento", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabGeneral)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabGeneral)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevaDireccionClActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaDireccionClActionPerformed
        tabGeneral.setEnabledAt(1, true);
        tabGeneral.setEnabledAt(0, false);
        tabGeneral.setSelectedIndex(1);
        this.accion = "guardar";
        btnGuardar.setText("Guardar");
        lblTrabajador.setVisible(false);
        cboTrabajadores.setVisible(false);
        lblClientes.setVisible(true);
        cboClientes.setVisible(true);
        this.person = "Cliente";
    }//GEN-LAST:event_btnNuevaDireccionClActionPerformed

    private void btnNuevaDireccionTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaDireccionTActionPerformed
        tabGeneral.setEnabledAt(1, true);
        tabGeneral.setEnabledAt(0, false);
        tabGeneral.setSelectedIndex(1);
        this.accion = "guardar";
        btnGuardar.setText("Guardar");
        lblClientes.setVisible(false);
        cboClientes.setVisible(false);
        lblTrabajador.setVisible(true);
        cboTrabajadores.setVisible(true);
        this.person = "Trabajador";
    }//GEN-LAST:event_btnNuevaDireccionTActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (tablaListadoDirec.getSelectedRowCount() == 1) {
            String id = String.valueOf(tablaListadoDirec.getValueAt(tablaListadoDirec.getSelectedRow(), 0));
            String direccion = String.valueOf(tablaListadoDirec.getValueAt(tablaListadoDirec.getSelectedRow(), 4));

            txtId.setText(id);
            txtDireccion.setText(direccion);

            tabGeneral.setEnabledAt(0, false);
            tabGeneral.setEnabledAt(1, true);
            tabGeneral.setSelectedIndex(1);
            this.accion = "editar";
            btnGuardar.setText("Editar");
            lblClientes.setVisible(false);
            cboClientes.setVisible(false);
            lblTrabajador.setVisible(false);
            cboTrabajadores.setVisible(false);
        } else {
            this.mensajeError("Seleccione 1 registro a editar.");
        }

    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (tablaListadoDirec.getSelectedRowCount() == 1) {
            String persona = String.valueOf(tablaListadoDirec.getValueAt(tablaListadoDirec.getSelectedRow(), 5));
            if (persona.equals("Trabajador")) {

                String id = String.valueOf(tablaListadoDirec.getValueAt(tablaListadoDirec.getSelectedRow(), 0));
                String direccion = String.valueOf(tablaListadoDirec.getValueAt(tablaListadoDirec.getSelectedRow(), 4));
                if (JOptionPane.showConfirmDialog(this, "Deseas eliminar la direccion: " + direccion + " ?", "Eliminar", JOptionPane.YES_NO_OPTION) == 0) {
                    if (dDAO.eliminar(Integer.parseInt(id))) {
                        this.mensajeOk("Registro eliminado");
                        this.listar();
                    } else {
                        this.mensajeError("Error, el regristro no pudo ser eliminado");
                    }
                }
            } else {
                String id = String.valueOf(tablaListadoDirec.getValueAt(tablaListadoDirec.getSelectedRow(), 0));
                String direccion = String.valueOf(tablaListadoDirec.getValueAt(tablaListadoDirec.getSelectedRow(), 4));
                if (JOptionPane.showConfirmDialog(this, "Deseas eliminar la direccion: " + direccion + " ?", "Eliminar", JOptionPane.YES_NO_OPTION) == 0) {
                    if (dDAO.eliminarCl(Integer.parseInt(id))) {
                        this.mensajeOk("Registro eliminado");
                        this.listar();
                    } else {
                        this.mensajeError("Error, el regristro no pudo ser eliminado");
                    }

                }
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        tabGeneral.setEnabledAt(0, true);
        tabGeneral.setEnabledAt(1, false);
        tabGeneral.setSelectedIndex(0);
        cboTrabajadores.setVisible(false);
        lblTrabajador.setVisible(false);
        cboClientes.setVisible(false);
        lblClientes.setVisible(false);
        this.limpiar();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (txtDireccion.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un número válido", "System", JOptionPane.WARNING_MESSAGE);
            txtDireccion.requestFocus();
            return;
        }

        if (this.accion.equals("editar")) {
            int id = Integer.parseInt(txtId.getText());
            String direccion = txtDireccion.getText();
            Direccion direc = new Direccion(id, direccion);
            if (dDAO.modificar(direc)) {
                this.mensajeOk("Direccion actualizada existosamente");
                this.limpiar();
                this.listar();
                tabGeneral.setEnabledAt(0, true);
                tabGeneral.setEnabledAt(1, false);
                tabGeneral.setSelectedIndex(0);
            } else {
                this.mensajeError("Ocurrió un error, la direccion no fue actualizado");
            }

        } else {

            if (this.person.equals("Trabajador")) {
                String direccion = txtDireccion.getText();
                Trabajador trabajador = (Trabajador) cboTrabajadores.getSelectedItem();
                Direccion direcc = new Direccion(direccion);
                int id = dDAO.insertarID(direcc);
                if (id != 0) {
                    if (dDAO.insertarDireccionTrabajador(id, trabajador.getIdTrabajador())) {
                        this.mensajeOk("Direccion añadida existosamente");
                        this.limpiar();
                        this.listar();
                        tabGeneral.setEnabledAt(0, true);
                        tabGeneral.setEnabledAt(1, false);
                        tabGeneral.setSelectedIndex(0);
                    } else {
                        this.mensajeError("Ocurrió un error al intentar agregar la direccion");
                    }
                }
            } else {
                String direccion = txtDireccion.getText();
                Cliente cliente = (Cliente) cboClientes.getSelectedItem();
                Direccion direcc = new Direccion(direccion);
                int id = dDAO.insertarID(direcc);
                if (id != 0) {
                    if (dDAO.insertarDireccionCliente(id, cliente.getIdCliente())) {
                        this.mensajeOk("Direccion añadida existosamente");
                        this.limpiar();
                        this.listar();
                        tabGeneral.setEnabledAt(0, true);
                        tabGeneral.setEnabledAt(1, false);
                        tabGeneral.setSelectedIndex(0);
                    } else {
                        this.mensajeError("Ocurrió un error al intentar agregar la direccion");
                    }
                }
            }
        }

    }//GEN-LAST:event_btnGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevaDireccionCl;
    private javax.swing.JButton btnNuevaDireccionT;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cboClientes;
    private javax.swing.JComboBox<String> cboTrabajadores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblClientes;
    private javax.swing.JLabel lblTrabajador;
    private javax.swing.JTabbedPane tabGeneral;
    private javax.swing.JTable tablaListadoDirec;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables
}
