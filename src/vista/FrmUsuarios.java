/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import dao.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.*;

/**
 *
 * @author Usuario
 */
public class FrmUsuarios extends javax.swing.JInternalFrame {

    TrabajadorDAO tDAO = new TrabajadorDAO();
    UsuarioDAO uDAO = new UsuarioDAO();
    String accion;

    /**
     * Creates new form FrmUsuarios
     */
    public FrmUsuarios() {
        initComponents();
        this.listar();
        this.accion = "guardar";
        txtId.setVisible(false);
        txtIdtrabajador.setVisible(false);
        lblTrabajador.setVisible(false);
    }

    private void listar() {
        ArrayList<Object> lista = uDAO.getList();
        DefaultTableModel modeloTabla;

        String[] titulos = {"ID", "Nombre", "RUT", "Usuario", "Contrase√±a", "Estado"};
        modeloTabla = new DefaultTableModel(null, titulos);

        for (Object obj : lista) {
            Usuario usuario = (Usuario) obj;
            Object[] row = new Object[6];
            row[0] = usuario.getIdUsuario();
            row[1] = usuario.getTrabajador().getNombre();
            row[2] = usuario.getTrabajador().getRut();
            row[3] = usuario.getUsuario();
            row[4] = usuario.getClave();
            switch (usuario.getEstado()) {
                case 1:
                    row[5] = "Activo";
                    break;
                case 2:
                    row[5] = "Inactivo";
                    break;
                default:
                    throw new AssertionError();
            }
            modeloTabla.addRow(row);
        }
        tablaListadoUsuarios.setModel(modeloTabla);
        tabGeneral.setEnabledAt(1, false);
    }

    private void limpiar() {
        txtUsername.setText("");
        txtId.setText("");
        txtPassword.setText("");
        this.accion = "guardar";
    }

    private void mensajeError(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "System", JOptionPane.ERROR_MESSAGE);
    }

    private void mensajeOk(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "System", JOptionPane.INFORMATION_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabGeneral = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaListadoUsuarios = new javax.swing.JTable();
        btnNuevo = new javax.swing.JButton();
        btnActivar = new javax.swing.JButton();
        btnDesactivar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        txtId = new javax.swing.JTextField();
        lblTrabajador = new javax.swing.JLabel();
        txtIdtrabajador = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        setTitle("Usuarios");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        tablaListadoUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaListadoUsuarios);

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnActivar.setText("Activar");
        btnActivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActivarActionPerformed(evt);
            }
        });

        btnDesactivar.setText("Desactivar");
        btnDesactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesactivarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(btnNuevo)
                .addGap(79, 79, 79)
                .addComponent(btnActivar)
                .addGap(91, 91, 91)
                .addComponent(btnDesactivar)
                .addGap(88, 88, 88)
                .addComponent(btnEditar)
                .addContainerGap(134, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnActivar)
                    .addComponent(btnDesactivar)
                    .addComponent(btnEditar))
                .addGap(0, 81, Short.MAX_VALUE))
        );

        tabGeneral.addTab("Listado", jPanel2);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Username(*)");

        jLabel2.setText("Password(*)");

        jLabel3.setText("(*) Indica que es un campo obligatorio");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        lblTrabajador.setText("ID Trabajador(*)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(81, 81, 81)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnGuardar)
                        .addGap(123, 123, 123)
                        .addComponent(btnVolver))
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(102, 102, 102)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblTrabajador)
                                .addGap(43, 43, 43)
                                .addComponent(txtIdtrabajador, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(165, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTrabajador)
                    .addComponent(txtIdtrabajador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(83, 83, 83)
                .addComponent(jLabel3)
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnVolver))
                .addContainerGap(93, Short.MAX_VALUE))
        );

        tabGeneral.addTab("Mantenimiento", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabGeneral)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabGeneral)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        tabGeneral.setEnabledAt(1, true);
        tabGeneral.setEnabledAt(0, false);
        tabGeneral.setSelectedIndex(1);
        this.accion = "guardar";
        btnGuardar.setText("Guardar");
        txtIdtrabajador.setVisible(true);
        lblTrabajador.setVisible(true);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnActivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActivarActionPerformed
        if (tablaListadoUsuarios.getSelectedRowCount() == 1) {
            String id = String.valueOf(tablaListadoUsuarios.getValueAt(tablaListadoUsuarios.getSelectedRow(), 0));
            String usuario = String.valueOf(tablaListadoUsuarios.getValueAt(tablaListadoUsuarios.getSelectedRow(), 2));
            String estado = String.valueOf(tablaListadoUsuarios.getValueAt(tablaListadoUsuarios.getSelectedRow(), 5));
            if (!estado.equals("Activo")) {
                if (JOptionPane.showConfirmDialog(this, "Deseas activar el trabajador: " + usuario + " ?", "Activar", JOptionPane.YES_NO_OPTION) == 0) {

                    if (uDAO.activar(Integer.parseInt(id))) {
                        this.mensajeOk("Registro activado");
                        this.listar();
                    } else {
                        this.mensajeError("Error, el regristro no pudo ser activado");
                    }
                }
            } else {
                this.mensajeError("El usuario ya est√° ACTIVO");
            }
        } else {
            this.mensajeError("Seleccione 1 registro a activar.");
        }
    }//GEN-LAST:event_btnActivarActionPerformed

    private void btnDesactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesactivarActionPerformed
        if (tablaListadoUsuarios.getSelectedRowCount() == 1) {
            String id = String.valueOf(tablaListadoUsuarios.getValueAt(tablaListadoUsuarios.getSelectedRow(), 0));
            String usuario = String.valueOf(tablaListadoUsuarios.getValueAt(tablaListadoUsuarios.getSelectedRow(), 2));
            String estado = String.valueOf(tablaListadoUsuarios.getValueAt(tablaListadoUsuarios.getSelectedRow(), 5));
            if (!estado.equals("Inactivo")) {
                if (JOptionPane.showConfirmDialog(this, "Deseas desactivar el trabajador: " + usuario + " ?", "Desactivar", JOptionPane.YES_NO_OPTION) == 0) {

                    if (uDAO.eliminar(Integer.parseInt(id))) {
                        this.mensajeOk("Registro descativado");
                        this.listar();
                    } else {
                        this.mensajeError("Error, el regristro no pudo ser desactivado");
                    }
                }
            } else {
                this.mensajeError("El usuario ya est√° ACTIVO");
            }
        } else {
            this.mensajeError("Seleccione 1 registro a activar.");
        }
    }//GEN-LAST:event_btnDesactivarActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        tabGeneral.setEnabledAt(0, true);
        tabGeneral.setEnabledAt(1, false);
        tabGeneral.setSelectedIndex(0);
        txtIdtrabajador.setVisible(false);
        lblTrabajador.setVisible(false);
        this.limpiar();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (tablaListadoUsuarios.getSelectedRowCount() == 1) {
            String id = String.valueOf(tablaListadoUsuarios.getValueAt(tablaListadoUsuarios.getSelectedRow(), 0));
            String username = String.valueOf(tablaListadoUsuarios.getValueAt(tablaListadoUsuarios.getSelectedRow(), 3));
            String password = String.valueOf(tablaListadoUsuarios.getValueAt(tablaListadoUsuarios.getSelectedRow(), 4));

            txtId.setText(id);
            txtUsername.setText(username);
            txtPassword.setText(password);

            tabGeneral.setEnabledAt(0, false);
            tabGeneral.setEnabledAt(1, true);
            tabGeneral.setSelectedIndex(1);
            this.accion = "editar";
            btnGuardar.setText("Editar");

        } else {
            this.mensajeError("Seleccione 1 registro a editar.");
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        Usuario usu;
        Trabajador tbj;
        if (txtUsername.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un nombre de usuario v√°lido", "System", JOptionPane.WARNING_MESSAGE);
            txtUsername.requestFocus();
            return;
        }
        if (txtPassword.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese una contrase√±a v√°lida", "System", JOptionPane.WARNING_MESSAGE);
            txtPassword.requestFocus();
            return;
        }

        if (this.accion.equals("editar")) {
            int id = Integer.parseInt(txtId.getText());
            String usuario = txtUsername.getText();
            String clave = txtPassword.getText();

            usu = new Usuario(id, usuario, clave);

            if (uDAO.modificar(usu)) {
                this.mensajeOk("Usuario actualizado existosamente");
                this.limpiar();
                this.listar();
                tabGeneral.setEnabledAt(0, true);
                tabGeneral.setEnabledAt(1, false);
                tabGeneral.setSelectedIndex(0);
            } else {
                this.mensajeError("Ocurri√≥ un error, el usuario no fue actualizado");
            }

        } else {
            int id = Integer.parseInt(txtIdtrabajador.getText());
            String username = txtUsername.getText();
            String password = txtPassword.getText();

            tbj = (Trabajador) tDAO.buscar(id);

            if (tbj != null) {
                usu = new Usuario(tbj, username, password);

                if (uDAO.insertar(usu)) {
                    this.mensajeOk("Usuario a√±adido existosamente");
                    this.limpiar();
                    this.listar();
                    txtIdtrabajador.setVisible(false);
                    lblTrabajador.setVisible(false);
                    tabGeneral.setEnabledAt(0, true);
                    tabGeneral.setEnabledAt(1, false);
                    tabGeneral.setSelectedIndex(0);
                } else {
                    this.mensajeError("Ocurrio un error al intentar agregar al usuario");
                }
            } else {
                JOptionPane.showMessageDialog(this, "El trabajador que intentas agregar, no existe", "System", JOptionPane.WARNING_MESSAGE);
                txtIdtrabajador.requestFocus();
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActivar;
    private javax.swing.JButton btnDesactivar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTrabajador;
    private javax.swing.JTabbedPane tabGeneral;
    private javax.swing.JTable tablaListadoUsuarios;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIdtrabajador;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
